[{"authors":null,"categories":null,"content":" Investigated many Devops pipeline programs and obtained statistical data that describe content and patterns in Devops pipelines.\n Java, Jenkins, GitHub\n  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"2c0e1c5341dc83c08489e133b4ebf2c6","permalink":"//localhost:1313/project/pa/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/pa/","section":"project","summary":"Comprehensive analysis of Devops pipelines","tags":["DevOps"],"title":"An Empirical Investigation into Large-Scale Devops Pipeline programs","type":"project"},{"authors":null,"categories":null,"content":" Designed and developed parallel optimization algorithm based on the LBFGS solver provided by PETSc, leveraging its parallel primitives and testing the scalability on cluster Implemented stochastic gradient solvers (SGD and ADAM), and tested their efficiency in comparison with LBFGS  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"c7f19c2080d957ec72f0f578592e522d","permalink":"//localhost:1313/project/crf/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/crf/","section":"project","summary":"Parallel and Stochastic optimization of Conditional Random Field for optical character recognition (OCR)","tags":["machine-learning"],"title":"Conditional Random Field for optical character recognition (OCR)","type":"project"},{"authors":null,"categories":null,"content":" Created a DevOps application workflow for automatically building and analyzing software applications statically as part of the workflow to obtain information about relationships among components of these applications. Java, Jenkins, Gitlab, GitHub  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"730622d356f770675d2c182a2f642534","permalink":"//localhost:1313/project/do/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/do/","section":"project","summary":"Simulation of end to end DevOps workflow","tags":["DevOps"],"title":"DevOps Orchestration to simulate end to end DevOps workflow at an enterprise level","type":"project"},{"authors":null,"categories":null,"content":"The Mask R-CNN (Regional Convolutional Neural Network) can be used in instance segmentation, and has been quite sucessful when compared with other architectures for the same task. In this project we look at its performance on two well known datasets, cityscapes and CSAIL Places, and try to see the impact of modifying hyperparameters and using different network architectures in the backbone.\n Summary of the Problem Instance Segmentation is the combination of three other tasks making it very difficult. Those three tasks are Image Classification, Object Detection, and Semantic Segmentation. See Figure 1 for an overview of the task.   Instance Segmentation\nImage Classification, being the most studied of the three, is a task where you are given an image and the goal is to classify it. Examples of such studies are those done on the MNIST dataset [1]. In MNIST, the task is to classify handwritten digits given only an image of the digit. Some of the most successful approaches involve CNN architectures, like VGG, GoogleLeNet, ResNet, and many others. Object Detection has the same domain, but the goal is to find all instances of an object and find the smallest bounding box around the object. One way to structure this as a machine learning task is to formulate it as a Regression problem, where the bounding box is defined by a set of coordinates. This is done in our Mask R-CNN implementation and its immediate predecessor, Faster R-CNN [2]. The goal of Semantic Segmentation is to classify each pixel, effectively segmenting an image into its semantic components. This was a difficult task because there was no obvious way to generate predictions for each pixel, without feeding the whole image multiple times through a traditional CNN classification network, and this would make the problem intractable. One well known solution to this is to use a Fully Convolutional Network (FCN), which would have an Encoder/Decoder structure by first using Convolution Layers and Pooling\n Cityscapes Cityscapes has data from street scenes, so an application of a network trained on this dataset is autonomous vehicles. The dataset has approximately 5,000 examples and 30 classes with fine grain annotations. We used about 3,500 for training and 500 for validation.\n CSAIL Places This dataset is more general and has a wide variety of scenes. It has approximately 20K examples (2K validation), with annotations, and 100 classes. The CSAIL places dataset will give us an opportunity to compare our results with work published that tested with more popular datasets like MSCOCO [4].\n Mask R-CNN Architecture\n  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"ab53399cabd74b2e9f3914a5627002ef","permalink":"//localhost:1313/project/maskrcnn/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/maskrcnn/","section":"project","summary":"Instance Segmentation using Convolutional Neural Networks","tags":["machine-learning"],"title":"Instance Segmentation using Convolutional Neural Networks","type":"project"},{"authors":null,"categories":null,"content":" Performed Monte-Carlo simulation for evaluation of stock purchase decisions that runs on Spark and deployed on private OctaPi cloud using Kubernetes Java, Spark, Docker, K8s  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"f09b93d28e84184bf0b2750b16219988","permalink":"//localhost:1313/project/mcs/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/mcs/","section":"project","summary":"Evaluation of stock investment decisions using Monte-Carlo simulation and OctaPi cloud","tags":["Cloud"],"title":"Monte-Carlo simulation with OctaPi cloud","type":"project"},{"authors":null,"categories":null,"content":" Built and designed an OctaPi cloud cluster of Raspberry PI devices to run a Hadoop map/reduce application to make software testing process parallel and efficient Automated deploying, scaling, and operating application containers on Raspberry Pi using Kubernetes Java, Hadoop, Docker, K8s  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"ffce5bc471c746c2d8d11b199640d7e3","permalink":"//localhost:1313/project/st/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/st/","section":"project","summary":"Automation of software testing process using Hadoop","tags":["Cloud"],"title":"Parallelization of software testing using Hadoop Map-Reduce model and OctaPi Cluster","type":"project"},{"authors":null,"categories":null,"content":" Conducted comparative study of Machine Learning and Deep Learning models for Sentiment Analysis Designed deep learning models to achieve state of the art performance on complex task such as sentiment analysis on twitter dataset  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"1e6260de844a02b205bddca42ade9aac","permalink":"//localhost:1313/project/sm/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/sm/","section":"project","summary":"Sentiment Analysis of Twitter Corpus","tags":["machine-learning"],"title":"Sentiment Analysis of Twitter Corpus","type":"project"},{"authors":null,"categories":null,"content":" Obtained information about program entities that were modified because of fixes to specific bugs/issues and found useful pattern amongst them using static code analysis tool like Understand Python, GitHub, Understand  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"5743653686b326694095c44c8ad1ea52","permalink":"//localhost:1313/project/sca/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/sca/","section":"project","summary":"Checking the open source projects for the frequently occuring issues","tags":["DevOps"],"title":"Static Code Analyzer to find most common bugs in Open Source Projects","type":"project"},{"authors":null,"categories":null,"content":" Developed a conditional random field model for Optical Character Recognition (OCR), with emphasis on inference and performance test Performed benchmarking by comparing CRF with multi-class linear SVM  ","date":1537592400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537592400,"objectID":"6dc0692cb8ed303095aec81aa6bee6a5","permalink":"//localhost:1313/project/crf_1/","publishdate":"2018-09-22T00:00:00-05:00","relpermalink":"/project/crf_1/","section":"project","summary":"Conditional Random Field for optical character recognition (OCR)","tags":["machine-learning"],"title":"Structured Output Prediction using Conditional Random Fields","type":"project"}]